{"version":3,"file":"Calculator.jsx","sourceRoot":"","sources":["Calculator.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\r\nimport { CalculatorDisplay, CalculatorButton, useCalculator } from '@/shared';\r\nimport React from 'react';\r\nimport { CalculatorProps } from '@/shared/lib/types';\r\n\r\nexport const Calculator: React.FC<CalculatorProps> = ({ \r\n  className = '', \r\n  orientation = 'portrait',\r\n  theme,\r\n  enableKeyboard = true \r\n}) => {\r\n  const { display, handleInput } = useCalculator(enableKeyboard);\r\n\r\n  // 세로 레이아웃\r\n  const portraitLayout = [\r\n    ['C', 'CE', '/', '*'],\r\n    ['7', '8', '9', '-'],\r\n    ['4', '5', '6', '+'],\r\n    ['1', '2', '3', '='],\r\n    ['0', '.'],\r\n  ];\r\n\r\n  // 가로 레이아웃 (더 넓은 형태)\r\n  const landscapeLayout = [\r\n    ['C', 'CE', '/', '*', '='],\r\n    ['7', '8', '9', '-', '0'],\r\n    ['4', '5', '6', '+', '.'],\r\n    ['1', '2', '3'],\r\n  ];\r\n\r\n  const buttonLayout = orientation === 'landscape' ? landscapeLayout : portraitLayout;\r\n  const isLandscape = orientation === 'landscape';\r\n\r\n  const defaultTheme = {\r\n    container: 'bg-gray-100',\r\n  };\r\n\r\n  const currentTheme = { ...defaultTheme, ...theme };\r\n  const containerClass = currentTheme.container || 'bg-gray-100';\r\n\r\n  return (\r\n    <div \r\n      className={`p-4 sm:p-6 rounded-xl shadow-lg mx-auto ${isLandscape ? 'max-w-2xl' : 'max-w-sm'} ${containerClass} ${className}`}\r\n    >\r\n      <CalculatorDisplay value={display} theme={theme} />\r\n      \r\n      <div className={`grid gap-2 sm:gap-3 ${isLandscape ? 'grid-cols-5' : 'grid-cols-4'}`}>\r\n        {buttonLayout.map((row, rowIndex) => \r\n          row.map((button, colIndex) => {\r\n            const isLastRow = rowIndex === buttonLayout.length - 1;\r\n            const isZeroButton = button === '0';\r\n            const isDecimalButton = button === '.';\r\n            \r\n            let buttonClass = '';\r\n            let variant: 'number' | 'operation' | 'function' = 'number';\r\n            \r\n            if (['+', '-', '*', '/', '='].includes(button)) {\r\n              variant = 'operation';\r\n            } else if (['C', 'CE'].includes(button)) {\r\n              variant = 'function';\r\n            }\r\n            \r\n            // 세로 레이아웃에서의 특별한 배치\r\n            if (!isLandscape) {\r\n              if (isZeroButton) {\r\n                buttonClass = 'col-span-2';\r\n              } else if (isDecimalButton && isLastRow) {\r\n                buttonClass = 'col-start-3';\r\n              }\r\n            }\r\n            \r\n            return (\r\n              <CalculatorButton\r\n                key={`${rowIndex}-${colIndex}`}\r\n                value={button}\r\n                onClick={handleInput}\r\n                variant={variant}\r\n                className={buttonClass}\r\n                theme={theme}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]}