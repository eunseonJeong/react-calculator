{"version":3,"file":"useCalculator.js","sourceRoot":"","sources":["useCalculator.ts"],"names":[],"mappings":"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","sourcesContent":["'use client'\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { CalculatorState, CalculatorOperation } from '../lib/types';\r\nimport { calculate, formatDisplay, isOperation, isNumber, isDecimalPoint } from '../lib/calculator';\r\n\r\nconst initialState: CalculatorState = {\r\n  display: '0',\r\n  previousValue: null,\r\n  operation: null,\r\n  waitingForOperand: false,\r\n};\r\n\r\n// 키보드 매핑\r\nconst keyMapping: Record<string, string> = {\r\n  '0': '0', '1': '1', '2': '2', '3': '3', '4': '4',\r\n  '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',\r\n  '+': '+', '-': '-', '*': '*', '/': '/',\r\n  '=': '=', 'Enter': '=', 'Escape': 'C',\r\n  '.': '.', ',': '.',\r\n  'c': 'C', 'C': 'C',\r\n  'Backspace': 'CE',\r\n};\r\n\r\nexport const useCalculator = (enableKeyboard: boolean = true) => {\r\n  const [state, setState] = useState<CalculatorState>(initialState);\r\n\r\n  const handleInput = useCallback((input: string) => {\r\n    setState(prevState => {\r\n      if (isNumber(input)) {\r\n        return handleNumberInput(prevState, input);\r\n      }\r\n      \r\n      if (isDecimalPoint(input)) {\r\n        return handleDecimalPointInput(prevState);\r\n      }\r\n      \r\n      if (isOperation(input)) {\r\n        return handleOperationInput(prevState, input as CalculatorOperation);\r\n      }\r\n      \r\n      return prevState;\r\n    });\r\n  }, []);\r\n\r\n  const handleNumberInput = (prevState: CalculatorState, input: string): CalculatorState => {\r\n    if (prevState.waitingForOperand) {\r\n      return {\r\n        ...prevState,\r\n        display: input,\r\n        waitingForOperand: false,\r\n      };\r\n    }\r\n    \r\n    return {\r\n      ...prevState,\r\n      display: prevState.display === '0' ? input : prevState.display + input,\r\n    };\r\n  };\r\n\r\n  const handleDecimalPointInput = (prevState: CalculatorState): CalculatorState => {\r\n    if (prevState.waitingForOperand) {\r\n      return {\r\n        ...prevState,\r\n        display: '0.',\r\n        waitingForOperand: false,\r\n      };\r\n    }\r\n    \r\n    if (prevState.display.indexOf('.') === -1) {\r\n      return {\r\n        ...prevState,\r\n        display: prevState.display + '.',\r\n      };\r\n    }\r\n    \r\n    return prevState;\r\n  };\r\n\r\n  const handleOperationInput = (prevState: CalculatorState, operation: CalculatorOperation): CalculatorState => {\r\n    if (operation === 'C') {\r\n      return initialState;\r\n    }\r\n    \r\n    if (operation === 'CE') {\r\n      return {\r\n        ...prevState,\r\n        display: '0',\r\n      };\r\n    }\r\n    \r\n    const inputValue = parseFloat(prevState.display);\r\n    \r\n    if (prevState.previousValue === null) {\r\n      return {\r\n        ...prevState,\r\n        previousValue: inputValue,\r\n        operation,\r\n        waitingForOperand: true,\r\n      };\r\n    }\r\n    \r\n    if (prevState.operation && !prevState.waitingForOperand) {\r\n      try {\r\n        const result = calculate(prevState.previousValue, inputValue, prevState.operation);\r\n        return {\r\n          display: formatDisplay(result),\r\n          previousValue: operation === '=' ? null : result,\r\n          operation: operation === '=' ? null : operation,\r\n          waitingForOperand: operation === '=' ? false : true,\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          ...initialState,\r\n          display: 'Error',\r\n        };\r\n      }\r\n    }\r\n    \r\n    return {\r\n      ...prevState,\r\n      operation,\r\n      waitingForOperand: true,\r\n    };\r\n  };\r\n\r\n  const reset = useCallback(() => {\r\n    setState(initialState);\r\n  }, []);\r\n\r\n  // 키보드 이벤트 핸들러\r\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\r\n    if (!enableKeyboard) return;\r\n    \r\n    const key = event.key;\r\n    const mappedKey = keyMapping[key];\r\n    \r\n    if (mappedKey) {\r\n      event.preventDefault();\r\n      handleInput(mappedKey);\r\n    }\r\n  }, [handleInput, enableKeyboard]);\r\n\r\n  // 키보드 이벤트 리스너 등록\r\n  useEffect(() => {\r\n    if (enableKeyboard) {\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [handleKeyDown, enableKeyboard]);\r\n\r\n  return {\r\n    display: state.display,\r\n    handleInput,\r\n    reset,\r\n  };\r\n};\r\n"]}